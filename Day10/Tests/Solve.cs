namespace Day10.Tests
{
    using CommonCode;
    using Xunit;
    using Xunit.Abstractions;

    public class Solve
    {
        private readonly ITestOutputHelper testOutputHelper;

        public Solve(ITestOutputHelper testOutputHelper)
        {
            this.testOutputHelper = testOutputHelper;
        }

        [Fact]
        public void TestDataPart1()
        {
            using (new ScopedTimer(this.testOutputHelper))
            {
                Assert.Equal((3, 4, 8),
                    new Solver().Solve(new Data(new[]
                    {
                        ".#..#",
                        ".....",
                        "#####",
                        "....#",
                        "...##"
                    })));
            }

            using (new ScopedTimer(this.testOutputHelper))
            {
                Assert.Equal((5, 8, 33),
                    new Solver().Solve(new Data(new[]
                    {
                        "......#.#.",
                        "#..#.#....",
                        "..#######.",
                        ".#.#.###..",
                        ".#..#.....",
                        "..#....#.#",
                        "#..#....#.",
                        ".##.#..###",
                        "##...#..#.",
                        ".#....####"
                    })));
            }

            using (new ScopedTimer(this.testOutputHelper))
            {
                Assert.Equal((1, 2, 35),
                    new Solver().Solve(new Data(new[]
                    {
                        "#.#...#.#.",
                        ".###....#.",
                        ".#....#...",
                        "##.#.#.#.#",
                        "....#.#.#.",
                        ".##..###.#",
                        "..#...##..",
                        "..##....##",
                        "......#...",
                        ".####.###.",
                    })));
            }

            using (new ScopedTimer(this.testOutputHelper))
            {
                Assert.Equal((6, 3, 41),
                    new Solver().Solve(new Data(new[]
                    {
                        ".#..#..###",
                        "####.###.#",
                        "....###.#.",
                        "..###.##.#",
                        "##.##.#.#.",
                        "....###..#",
                        "..#.#..#.#",
                        "#..#.#.###",
                        ".##...##.#",
                        ".....#.#.."
                    })));
            }

            using (new ScopedTimer(this.testOutputHelper))
            {
                Assert.Equal((11, 13, 210),
                    new Solver().Solve(new Data(new[]
                    {
                        ".#..##.###...#######",
                        "##.############..##.",
                        ".#.######.########.#",
                        ".###.#######.####.#.",
                        "#####.##.#.##.###.##",
                        "..#####..#.#########",
                        "####################",
                        "#.####....###.#.#.##",
                        "##.#################",
                        "#####.##.###..####..",
                        "..######..##.#######",
                        "####.##.####...##..#",
                        ".#####..#.######.###",
                        "##...#.##########...",
                        "#.##########.#######",
                        ".####.#.###.###.#.##",
                        "....##.##.###..#####",
                        ".#.#.###########.###",
                        "#.#.#.#####.####.###",
                        "###.##.####.##.#..##",
                    })));
            }
        }

        [Fact]
        public void InputDataPart1()
        {
            (int X, int Y, int VisibleCount) answer;
            using (new ScopedTimer(this.testOutputHelper))
            {
                answer = new Solver().Solve(new Data(new[]
                {
                    "#..#....#...#.#..#.......##.#.####",
                    "#......#..#.#..####.....#..#...##.",
                    ".##.......#..#.#....#.#..#.#....#.",
                    "###..#.....###.#....##.....#...#..",
                    "...#.##..#.###.......#....#....###",
                    ".####...##...........##..#..#.##..",
                    "..#...#.#.#.###....#.#...##.....#.",
                    "......#.....#..#...##.#..##.#..###",
                    "...###.#....#..##.#.#.#....#...###",
                    "..#.###.####..###.#.##..#.##.###..",
                    "...##...#.#..##.#............##.##",
                    "....#.##.##.##..#......##.........",
                    ".#..#.#..#.##......##...#.#.#...##",
                    ".##.....#.#.##...#.#.#...#..###...",
                    "#.#.#..##......#...#...#.......#..",
                    "#.......#..#####.###.#..#..#.#.#..",
                    ".#......##......##...#..#..#..###.",
                    "#.#...#..#....##.#....#.##.#....#.",
                    "....#..#....##..#...##..#..#.#.##.",
                    "#.#.#.#.##.#.#..###.......#....###",
                    "...#.#..##....###.####.#..#.#..#..",
                    "#....##..#...##.#.#.........##.#..",
                    ".#....#.#...#.#.........#..#......",
                    "...#..###...#...#.#.#...#.#..##.##",
                    ".####.##.#..#.#.#.#...#.##......#.",
                    ".##....##..#.#.#.......#.....####.",
                    "#.##.##....#...#..#.#..###..#.###.",
                    "...###.#..#.....#.#.#.#....#....#.",
                    "......#...#.........##....#....##.",
                    ".....#.....#..#.##.#.###.#..##....",
                    ".#.....#.#.....#####.....##..#....",
                    ".####.##...#.......####..#....##..",
                    ".#.#.......#......#.##..##.#.#..##",
                    "......##.....##...##.##...##......",
                }));
            }

            this.testOutputHelper.WriteLine($"Best Asteroid: {answer.X}, {answer.Y}. Count = {answer.VisibleCount}");
        }

        [Fact]
        public void InputDataPart2()
        {
            int answer;
            using (new ScopedTimer(this.testOutputHelper))
            {
                var data = new Data(new[]
                {
                    "#..#....#...#.#..#.......##.#.####",
                    "#......#..#.#..####.....#..#...##.",
                    ".##.......#..#.#....#.#..#.#....#.",
                    "###..#.....###.#....##.....#...#..",
                    "...#.##..#.###.......#....#....###",
                    ".####...##...........##..#..#.##..",
                    "..#...#.#.#.###....#.#...##.....#.",
                    "......#.....#..#...##.#..##.#..###",
                    "...###.#....#..##.#.#.#....#...###",
                    "..#.###.####..###.#.##..#.##.###..",
                    "...##...#.#..##.#............##.##",
                    "....#.##.##.##..#......##.........",
                    ".#..#.#..#.##......##...#.#.#...##",
                    ".##.....#.#.##...#.#.#...#..###...",
                    "#.#.#..##......#...#...#.......#..",
                    "#.......#..#####.###.#..#..#.#.#..",
                    ".#......##......##...#..#..#..###.",
                    "#.#...#..#....##.#....#.##.#....#.",
                    "....#..#....##..#...##..#..#.#.##.",
                    "#.#.#.#.##.#.#..###.......#....###",
                    "...#.#..##....###.####.#..#.#..#..",
                    "#....##..#...##.#.#.........##.#..",
                    ".#....#.#...#.#.........#..#......",
                    "...#..###...#...#.#.#...#.#..##.##",
                    ".####.##.#..#.#.#.#...#.##......#.",
                    ".##....##..#.#.#.......#.....####.",
                    "#.##.##....#...#..#.#..###..#.###.",
                    "...###.#..#.....#.#.#.#....#....#.",
                    "......#...#.........##....#....##.",
                    ".....#.....#..#.##.#.###.#..##....",
                    ".#.....#.#.....#####.....##..#....",
                    ".####.##...#.......####..#....##..",
                    ".#.#.......#......#.##..##.#.#..##",
                    "......##.....##...##.##...##......",
                }, (23, 20), 200);
                answer = new Solver().Solve2(data);
            }

            this.testOutputHelper.WriteLine($"Answer = {answer}");
        }

        [Fact]
        public void TestDataPart2()
        {
            int answer;
            using (new ScopedTimer(this.testOutputHelper))
            {
                var data = new Data(new[]
                {
                    ".#.",
                    "#.#",
                    ".#.",
                }, (1, 1), 200);
                answer = new Solver().Solve2(data);
            }

            this.testOutputHelper.WriteLine($"Answer = {answer}");
        }
    }
}
